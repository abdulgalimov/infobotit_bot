version: '3'

services:
  app:
    restart: always
    container_name: infobot-app
    build:
      context: .
      dockerfile: .docker/Dockerfile
    environment:
      - IN_DOCKER=true
    ports:
      - '3002:3002'
    networks:
      - app_net
    depends_on:
      - db
    volumes:
      - ./volumes/app/temp:/app/temp
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
        labels: "infobot-app"

  db:
    restart: always
    image: postgres:15.2
    container_name: infobot-postgres
    ports:
      - 5434:5432
    environment:
      POSTGRES_DB: infobot
      POSTGRES_USER: infobot
      POSTGRES_PASSWORD: infobot
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app_net

  pgadmin:
    restart: always
    container_name: infobot-pgadmin
    depends_on:
      - db
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.ru
      PGADMIN_DEFAULT_PASSWORD: admin
    expose:
      - 80
    ports:
      - 5433:80

  grafana:
    restart: always
    image: grafana/grafana:9.3.6
    container_name: infobot-grafana
    ports:
      - 3001:3000
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - app_net

  loki:
    image: grafana/loki:2.8.0
    container_name: infobot-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app_net

  promtail:
      image: grafana/promtail:2.8.0
      container_name: infobot-promtail
      volumes:
        - /var/log:/var/log
      command: -config.file=/etc/promtail/config.yml
      networks:
        - app_net

  prometheus:
    image: prom/prometheus:latest
    container_name: infobot-prometheus
    volumes:
      - ./volumes/prometheus:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - app_net
    user: ":"

  redis:
    image: redis:7.0.8
    container_name: infobot-redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - app_net

networks:
  app_net:
    driver: bridge

volumes:
  app:
  db:
  grafana:
  redis:
