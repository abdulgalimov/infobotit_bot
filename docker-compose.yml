version: '3'

services:
  app:
    restart: always
    container_name: infobot-app
    build:
      context: .
      dockerfile: .docker/Dockerfile
    environment:
      - IN_DOCKER=true
    ports:
      - '3002:3002'
    networks:
      - app_net
    volumes:
      - ./volumes/app/temp:/app/temp

  db:
    restart: always
    image: postgres:15.2
    container_name: infobot-postgres
    shm_size: 2g
    ports:
      - 5435:5432
    environment:
      POSTGRES_DB: infobot
      POSTGRES_USER: infobot
      POSTGRES_PASSWORD: infobot
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app_net

  grafana:
    restart: always
    image: grafana/grafana:9.3.6
    container_name: infobot-grafana
    ports:
      - 3101:3000
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - app_net

  prometheus:
    image: prom/prometheus:latest
    container_name: infobot-prometheus
    volumes:
      - ./volumes/prometheus:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - app_net
    user: ":"

  redis:
    image: redis:7.0.8
    container_name: infobot-redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - app_net

  otel:
    image: grafana/otel-lgtm
    container_name: 'infobot-otel'
    restart: unless-stopped
    ports:
      - '3100:3100' # Loki
      - '3000:3000' # Grafana
      - '4317:4317' # OTLP gRPC
      - '4318:4318' # OTLP HTTP
    volumes:
      - ./docker/grafana/grafana-dashboards.yaml:/otel-lgtm/grafana/conf/provisioning/dashboards/grafana-dashboards.yaml
      - ./docker/grafana/dashboards:/otel-lgtm/grafana-dashboards
    networks:
      - app_net
networks:
  app_net:
    driver: bridge

volumes:
  app:
  db:
  grafana:
  redis:
